#!/bin/bash
set -e -o pipefail

export PATH="/bin:/usr/bin"

function usage {
	echo "Usage: ${0##*/} [-r] scores_file"
}

while getopts 'r' opt; do
	case "$opt" in
		r)
			reverse="true"
			shift
			;;
		*)
			usage >&2
			exit 1
			;;
	esac
done

if [[ $# -ne 1 ]]; then
	usage >&2
	exit 1
fi

function readlog {
	local IFS
	version="$1"
	points="$2"
	deathdnum="$3"
	deathlev="$4"
	maxlvl="$5"
	hp="$6"
	maxhp="$7"
	deaths="$8"
	deathdate="$9"
	shift 9
	birthdate="$1"
	uid="$2"
	role="$3"
	race="$4"
	gender="$5"
	alignment="$6"
	shift 6
	IFS=","
	set -- $@
	unset IFS
	name="$1"
	shift 1
	epitaph="$@"
}

function produce_line {
	echo -n "+"
	for (( i=0; i < 78; i++ )); do
		echo -n "${1:-"="}"
	done
	echo "+"
}

#last_spun="-"
#function spinner {
#	case "$last_spun" in
#		-)
#			last_spun="\\"
#			;;
#		\\)
#			last_spun="|"
#			;;
#		\|)
#			last_spun="/"
#			;;
#		/)
#			last_spun="-"
#			;;
#	esac
#	echo -n "$last_spun"
#}

printf_str='| %11s | %-47s | %-12s |\n'

function array_printf {
	local t
	printf -v t "$printf_str| %11s | %47s | %-12s |\n" "$@"
	text+=( "$t" )
}

#trap "kill %1 &> /dev/null" EXIT
#(
#		trap "break" USR1
#		while [[ -z "$done" ]]; do
#			printf "\r%s" "Please wait... "
#			spinner
#			sleep 0.1
#		done
#) &

declare -a text
while read -r line; do
	readlog $line

	array_printf "$points" \
		"$name-$role-$race-$gender-$alignment on level $deathlev" \
		"$hp [$maxhp]" "" \
		"$epitaph" ""
done < "$*"

#kill -USR1 %1
#printf "\r"

(
	produce_line
	printf "$printf_str" "No. Points" "Name" "Hp [max]"
	produce_line "-"

	if [[ -n "$reverse" ]]; then
		for (( i=${#text[@]} - 1; i >= 0; i-- )); do
			echo -n "${text[$i]}"
		done
	else
		for (( i=0; i < ${#text[@]}; i++ )); do
			echo -n "${text[$i]}"
		done
	fi

	produce_line
) | less
