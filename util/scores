#!/bin/bash
export PATH="/bin:/usr/bin"

declare -a tempfiles
trap '/bin/rm -f "${tempfiles[@]}"' EXIT

function tempfile {
	local f
	f="$(mktemp -t "$*.XXXXXXX")"
	tempfiles+=( "$f" )
	echo "$f"
}

function usage {
	echo "Usage: ${0##*/} scores_file"
}

if [[ $# -ne 1 ]]; then
	usage >&2
	exit 1
fi

function readlog {
	local IFS=":" v="$*"
	set -- $v
	unset IFS
	for i; do
		IFS="="
		set -- $i
		unset IFS
		eval "$1=\"$2\""
	done
}

function hash {
	set -- $(sha1sum <<< "$*")
	h="${1:0:5}"
}

declare -i lines_per_percent=$(( $(set -- $(wc -l "$*"); echo $1) / 100 ))
declare -i lineno=0 cnt=0

tempfifo="$(tempfile scores.fifo)"
rm -f "$tempfifo"
mkfifo "$tempfifo"

(
	exec 3< "$tempfifo"
	dialog --title "Score Viewer" --gauge "Reading Scores Log" 0 40 0 <&3
	exec 3>&-
) &

argsfile="$(tempfile scores.args)"
exec 3> "$tempfifo"
exec 4> "$argsfile"
declare -A time_hash
while read -r line; do
	cnt+=1
	if [[ $cnt -eq $lines_per_percent ]]; then
		cnt=0
		lineno+=1
		echo $lineno >&3
	fi

	readlog $line

	line="$name-$role-$race-$gender-$align $death on level $deathlev (HP: $hp [$maxhp])"
	hash "$line"
	time_hash[$h]="$starttime"
	echo "\"$h\" \"$line\"" >&4
done < "$*"
exec 3>&-
exec 4>&-

tempfile="$(tempfile scores)"
exec 3> "$tempfile"
while true; do
	dialog --output-fd 3 --title "High Scores" --menu "" 0 0 0 --file "$argsfile" || break
	read -d '' < "$tempfile"
	echo -n > "$tempfile"
	dumplog="$HOME/nh/${time_hash[$REPLY]}.nh343.txt"
	if [[ -f "$dumplog" ]]; then
		less "$dumplog"
	else
		dialog --title "Error" --msgbox "No dumplog found" 5 20
	fi
done
exec 3>&-
